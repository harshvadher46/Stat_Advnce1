{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "dbe91664-0be8-453f-a934-8f1ba7014e0d",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Q1 What is the Probability density function?\n",
    "'''Ans--> The Probability Density Function (PDF) is a concept in probability theory and statistics that describes the likelihood of a \n",
    "continuous random variable taking on a specific value.\n",
    "-- the PDF is denoted by f(x)'''"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "28650ff4-6196-455e-956a-d3cffeeba6dd",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Q2. What are the types of Probability distribution?\n",
    "'''Ans ---> The two main categories are discrete probability distributions and continuous probability distributions.\n",
    "   Discrete Probability Distributions:\n",
    "Bernoulli Distribution: Describes a single trial with two possible outcomes, typically labeled as success and failure.\n",
    "Binomial Distribution: Represents the number of successes in a fixed number of independent Bernoulli trials.\n",
    "Poisson Distribution: Models the number of events occurring in a fixed interval of time or space, given a known average rate.\n",
    "\n",
    "   Continuous Probability Distributions:\n",
    "Normal Distribution (Gaussian Distribution): Characterized by a symmetric bell-shaped curve. Many natural phenomena follow this distribution.\n",
    "Uniform Distribution: All outcomes in the sample space are equally likely to occur.\n",
    "Exponential Distribution: Describes the time between events in a Poisson process, where events occur continuously and independently at a constant average rate.   "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "76bb9e2b-4787-4541-9c42-3254875f7765",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "ename": "SyntaxError",
     "evalue": "invalid syntax (2769986197.py, line 4)",
     "output_type": "error",
     "traceback": [
      "\u001b[1;36m  Cell \u001b[1;32mIn[4], line 4\u001b[1;36m\u001b[0m\n\u001b[1;33m    Ans-->\u001b[0m\n\u001b[1;37m        ^\u001b[0m\n\u001b[1;31mSyntaxError\u001b[0m\u001b[1;31m:\u001b[0m invalid syntax\n"
     ]
    }
   ],
   "source": [
    "'''Q3. Write a Python function to calculate the probability density function of a normal distribution with\n",
    "given mean and standard deviation at a given point.'''\n",
    "\n",
    "Ans--> \n",
    "import numpy as np \n",
    "def normal_pdf(x,mu,sigma):\n",
    "   #  x: The point at which to evaluate the PDF.\n",
    "   # mu: The mean of the distribution.\n",
    "   # sigma: The standard deviation of the distribution.\n",
    "return(1/(np.sqrt(2*np.pi)*sigma))* np.exp(-0.5 * ((x - mu) / sigma)**2)\n",
    "mean=2\n",
    "std_dev=3\n",
    "x=3\n",
    "\n",
    "pdf_value=normal_pdf(mean,x,std_dev)\n",
    "print(f\"The PDF of the normal distribution at x = {x} is: {pdf_value:.4f}\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "34c54b9b-c44b-43df-855a-15cb97abd13d",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "\"Ans:- The Binomial distribution is a discrete probability distribution that describes the number of successes\\nin a fixed number of independent Bernoulli trials,where each trial has only two possible outcomes (success or failure).\\n The key properties of the Binomial distribution are:\\n\\nNumber of Trials (n): The distribution is based on a fixed number of trials, denoted by 'n'.\\nTwo Possible Outcomes: Each trial has only two possible outcomes, usually labeled as success (S) and failure (F).\\nIndependence: The trials are assumed to be independent of each other.\""
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "'''Q4. What are the properties of Binomial distribution? Give two examples of events where binomial\n",
    "distribution can be applied.'''\n",
    "\n",
    "'''Ans:- The Binomial distribution is a discrete probability distribution that describes the number of successes\n",
    "in a fixed number of independent Bernoulli trials,where each trial has only two possible outcomes (success or failure).\n",
    " The key properties of the Binomial distribution are:\n",
    "\n",
    "Number of Trials (n): The distribution is based on a fixed number of trials, denoted by 'n'.\n",
    "Two Possible Outcomes: Each trial has only two possible outcomes, usually labeled as success (S) and failure (F).\n",
    "Independence: The trials are assumed to be independent of each other.'''"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "9b17c901-b3f1-4c6c-9b6c-e2edb59ca043",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "'''Q5. Generate a random sample of size 1000 from a binomial distribution with probability of success 0.4\n",
    "and plot a histogram of the results using matplotlib.'''\n",
    "import matplotlib.pyplot as plt\n",
    "import numpy as np\n",
    "\n",
    "# Define parameters\n",
    "n = 1000  # Number of trials\n",
    "p = 0.4  # Probability of success\n",
    "\n",
    "# Generate random sample\n",
    "sample = np.random.binomial(n, p, size=1000)\n",
    "\n",
    "# Plot histogram\n",
    "plt.hist(sample, bins=20, edgecolor='black')\n",
    "plt.xlabel('Number of successes')\n",
    "plt.ylabel('Frequency')\n",
    "plt.title('Histogram of Binomial Distribution Sample (n={}, p={})'.format(n, p))\n",
    "plt.grid(True)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "2e24559d-2534-41e0-9471-53296c5aac3a",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The CDF of the Poisson distribution at k = 3 is: 1.2583\n"
     ]
    }
   ],
   "source": [
    "# Q6. Write a Python function to calculate the cumulative distribution function of a Poisson distribution with given mean at a given point.  \n",
    "\n",
    "import numpy as np\n",
    "def poisson_cdf(k, lam):\n",
    "    if k<0:\n",
    "        return 0\n",
    "    p = np.exp(-lam)\n",
    "    cdf = 1.0\n",
    "    for i in range(1, k + 1):\n",
    "        p *= lam / i\n",
    "        cdf += p\n",
    "    return cdf\n",
    "\n",
    "# Example usage\n",
    "lam = 5.0\n",
    "k = 3\n",
    "\n",
    "cdf_value = poisson_cdf(k, lam)\n",
    "print(f\"The CDF of the Poisson distribution at k = {k} is: {cdf_value:.4f}\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "3d9998d5-03ad-4ef9-99d2-2edd1224cf82",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Q7. How Binomial distribution different from Poisson distribution?\n",
    "'''\n",
    "Number of trials:\n",
    "binomial-> Fixed \n",
    "poisson -> Not Fixed\n",
    "\n",
    "Possible Outcomes:\n",
    "Binomial: Only two possible outcomes, usually labeled \"success\" and \"failure.\"\n",
    "Poisson: Countable number of non-negative outcomes (0, 1, 2, ...). \n",
    "\n",
    "Probability Calculation:\n",
    "Binomial: You directly calculate the probability of getting a specific number of successes using the probability mass function (PMF) based on the number of trials (n) and success probability (p).\n",
    "Poisson: You calculate the probability of getting a specific number of events using the Poisson PMF based on the mean (λ).'''"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "b539ac25-bca6-4244-a6c0-b5c0e8132396",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Sample Mean: 5.084\n",
      "Sample Variance: 4.676944\n"
     ]
    }
   ],
   "source": [
    "'''Q8. Generate a random sample of size 1000 from a Poisson distribution with mean 5 and calculate the\n",
    "sample mean and variance.'''\n",
    "\n",
    "import numpy as np\n",
    "# Set the parameters for the Poisson distribution\n",
    "mean_value = 5\n",
    "\n",
    "# Generate a random sample of size 1000 from the Poisson distribution\n",
    "random_sample = np.random.poisson(mean_value, size=1000)\n",
    "\n",
    "# Calculate the sample mean and variance\n",
    "sample_mean = np.mean(random_sample)\n",
    "sample_variance = np.var(random_sample)\n",
    "\n",
    "# Display the results\n",
    "print(f\"Sample Mean: {sample_mean}\")\n",
    "print(f\"Sample Variance: {sample_variance}\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "858e3f8c-733d-4b8e-97cd-1963752d6b1c",
   "metadata": {
    "tags": []
   },
   "outputs": [],
   "source": [
    "# Q9. How mean and variance are related in Binomial distribution and Poisson distribution?\n",
    "'''\n",
    "Binomial Distribution:\n",
    "Mean: E(X) = np, where n is the number of trials and p is the probability of success.\n",
    "Variance: Var(X) = np(1-p).\n",
    "Relationship: Var(X) = (1-p) * E(X). This means the variance is always smaller than the mean, and their difference increases as p approaches 0 or 1 (extreme success or failure probabilities).\n",
    "\n",
    "Poisson Distribution:\n",
    "Mean: E(X) = λ, where λ is the average number of successes in a given interval.\n",
    "Variance: Var(X) = λ.\n",
    "Relationship: Var(X) = E(X). This means the mean and variance are always equal.\n",
    "\n",
    "Key Differences:\n",
    "Binomial: Fixed trials, two outcomes, variance depends on both mean and success probability.\n",
    "Poisson: No fixed trials, count outcomes, variance always equals the mean."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "c917bb69-bdb9-4b58-824b-83118eda651e",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Q10. In normal distribution with respect to mean position, where does the least frequent data appear?\n",
    "'''\n",
    "In a normal distribution, the least frequent data appear furthest away from the mean, in both tails of the bell-shaped curve.\n",
    "This is because the normal distribution follows a specific probability density function,where the probability of observing a value decreases as it gets further away from the mean.\n",
    "\n",
    "1. Symmetry and Bell Shape:\n",
    "-->A normal distribution is symmetrical around its mean, meaning the left and right sides of the curve are mirror images.\n",
    "-->It also has a bell shape, where the highest point of the curve is at the mean, and the curve gradually tapers off towards both tails.\n",
    "\n",
    "2. Probability Density Function (PDF):\n",
    "The normal distribution is characterized by its PDF, which represents the probability of any given value occurring.\n",
    "As you move away from the mean, the PDF value decreases exponentially. This means that values further away from the mean are progressively less likely to occur."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "be0d4b78-f899-4d68-90b5-618b88f23794",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
